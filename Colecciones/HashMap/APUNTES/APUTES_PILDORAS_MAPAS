
MAPAS
______

Lista compuesta por clave valor
No pueden haber claves iguales
Tiene poca eficiencia comparado con las demás colecciones


HASHMAP
_________
No permite la ordenación de sus elementos
Es bastante eficiente

Es como almacenar la información en una tabla con dos columnas. Se reciben dos tipos genéricos
de parámetros <K,V> (clave,valor). La clave no tiene por qué ser un número, puede ser cualquier cosa.

MÉTODO PUT
___________
Para poder introducir elementos es a través del método put.
put(K,V);

MÉTODO GET
__________
Nos permite obtener un valor en concreto, se usa mucho en búsquedas
V get(Object key)

MapEntry
_________
Set<Map.Entry<K,V> entrySet()

Es como una clase interna.

Nos devuelve un set con Map.Entry y este recibe una clave y un valor. 
Map.Entry tiene una serie de métodos:
getKey()->devuelve la clave correspondiente a la entrada que le indiquemos
getValue()->devuelve el valor correspondiente a la entrada


EJEMPLO
________

//Vamos a almacenar empleados que tengan su propia clave

import java.util.*;
public class PruebaMapas{
    public static void main (String []args){
      HashMap<String,Empleado>personal=new HashMap<String,Empleado>();
      personal.put("145",new Empleado("Juan"));
      personal.put("146",new Empleado("Ana"));
      personal.put("147",new Empleado("Antonio"));
      personal.put("148",new Empleado("Sandra"));
      System.out.println(personal);
      personal.remove("147"); //Borramos Antonio
      personal.put("148",new Empleado("Natalia"));   //Sustituye Sandra por Natalia
      System.out.println(personal.entrySet()); //Nos imprime todo lo que hay en la colección pero en tipo set con un corchete de apertura y otro de cierre
      
      //Con getKey y getValue podemos acceder a las claves y los valores dándole un formato determinado
      for(Map.Entry<String,Empleado>entrada:personal.entrySet()){
        String clave=entrada.getKey();
        Empleado valor=entrada.getValue();
        System.out.println("Clave= "+clave+" Valor: "+valor;
        
      }
    }
 }
 class Empleado{
 
 //Constructor con un argumento nombre
  public Empleado(String n){
    nombre=n;
    sueldo=2000;
  }
  public String toString(){
    return"[Nombre="+nombre+", sueldo="+sueldo+" 
  }
  private String nombre;
  private double sueldo;
  
  }

Con remove (Object key) se puede borrar una clave del mapa.
Si introducimos un elemento con la misma clave con put lo que estamos haciendo es reemplazarlo.

